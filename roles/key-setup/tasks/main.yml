---
# Phase 0: Account Key Setup (Local Machine)
# Extract and validate cluster-specific account keys from local key files

- name: Determine cluster name
  set_fact:
    cluster_name: "{{ group_names | select('match', 'cluster[0-9]+') | first | default('cluster1') }}"

# Extract public key from locally generated key files using local inferenced
- name: Extract cluster account public key from local key files
  shell: >
    printf '%s\n' "$KEYRING_PASSWORD" |
    {{ playbook_dir }}/../inferenced keys show gonka-account-key-{{ cluster_name }}
    --keyring-backend file
    --home {{ playbook_dir }}/../gonka-keys-{{ cluster_name }}
  register: account_key_info
  failed_when: "'gonka1' not in account_key_info.stdout"
  environment:
    KEYRING_PASSWORD: "{{ keyring_password }}"

- name: Store cluster account pubkey
  set_fact:
    "{{ cluster_name }}_account_pubkey": "{{ account_key_info.stdout | regex_findall('\"key\":\"([^\"]+)\"') | first }}"

- name: Get account pubkey for validation
  set_fact:
    temp_account_pubkey: "{{ lookup('vars', cluster_name + '_account_pubkey') }}"

- name: Validate account key format
  assert:
    that: temp_account_pubkey is defined and temp_account_pubkey | length > 10
    fail_msg: "Invalid {{ cluster_name }} account key format: {{ temp_account_pubkey }}"

- name: Display key extraction success
  debug:
    msg: |
      ✅ {{ cluster_name | upper }} Account PubKey Extracted Successfully:
      🔑 PubKey: {{ temp_account_pubkey }}
      📁 Keyring: ./gonka-keys-{{ cluster_name }}

- name: Publish account pubkey to network node hostvars
  add_host:
    name: "{{ groups[cluster_name + '_network_node'][0] }}"
    "{{ cluster_name }}_account_pubkey": "{{ temp_account_pubkey }}"

- name: Save account pubkey locally for reuse across runs
  copy:
    content: "{{ temp_account_pubkey }}"
    dest: "{{ playbook_dir }}/../account_pubkey_{{ cluster_name }}.txt"
    mode: '0644'
  delegate_to: localhost
  become: false
