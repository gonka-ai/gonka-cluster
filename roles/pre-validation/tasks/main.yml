---
# Pre-Validation Role
# System prerequisites validation BEFORE deployment starts

- name: Determine cluster name for all hosts
  set_fact:
    cluster_name: "{{ group_names | select('match', 'cluster[0-9]+') | first }}"

- name: Validate basic system requirements
  assert:
    that:
      - ansible_distribution == "Ubuntu"
      - ansible_distribution_version is match('^(22\.04|24\.04)(\.[0-9]+)?$')
    fail_msg: "Server must run Ubuntu 22.04.x or 24.04.x (found: {{ ansible_distribution }} {{ ansible_distribution_version }})"
  when: ansible_distribution is defined

- name: Check actual Docker version
  command: docker --version
  register: docker_ver_raw
  failed_when: false
  changed_when: false

- set_fact:
    docker_semver: "{{ (docker_ver_raw.stdout | regex_search('([0-9]+\\.[0-9]+\\.[0-9]+)')) | default('0.0.0', true) }}"

- name: Install/upgrade Docker to latest stable
  include_tasks: install_docker.yml
  when: docker_semver is version('28.3.0', '<')

- name: Re-check Docker version
  command: docker --version
  register: docker_version
  changed_when: false

- name: Ensure Docker version >= 28.3.0
  assert:
    that:
      - "(docker_version.stdout | regex_search('([0-9]+\\.[0-9]+\\.[0-9]+)')) is version('28.3.0', '>=')"
    fail_msg: "Docker must be >= 28.3.0 (got: {{ docker_version.stdout | default('unknown') }})"

- name: Check NVIDIA GPU availability
  command: nvidia-smi --query-gpu=name --format=csv,noheader,nounits
  register: gpu_check
  changed_when: false
  when: "inventory_hostname in groups[cluster_name + '_ml_nodes']"
  failed_when: "inventory_hostname in groups[cluster_name + '_ml_nodes'] and (gpu_check.rc != 0 or gpu_check.stdout_lines | length < minimum_gpu_count)"

- name: Validate minimum disk space available
  shell: df --output=avail -BG / | tail -1 | tr -d 'G'
  register: disk_space
  changed_when: false
  failed_when: disk_space.stdout | int < 100

- name: Validate network connectivity to external services
  uri:
    url: "{{ item }}"
    method: GET
    timeout: 10
  loop:
    - "https://github.com"
    - "https://huggingface.co"
  register: network_tests
  ignore_errors: true

- name: Validate SSH connectivity between servers
  command: ping -c 3 {{ item }}
  loop: "{{ groups['gonka_clusters'] | difference([inventory_hostname]) }}"
  register: connectivity_tests
  ignore_errors: true
  failed_when: false

- name: Ensure firewall is enabled and running
  service:
    name: ufw
    state: started
    enabled: true
  register: firewall_service

- name: Generate pre-validation report
  debug:
    msg: |
      ✅ Pre-Validation Report for {{ inventory_hostname }}
      🖥️  OS: {{ ansible_distribution }} {{ ansible_distribution_version }}
      🐳 Docker: {{ docker_version.stdout | default('OK') }}
      💾 Disk Space: {{ disk_space.stdout }}GB available
      🌐 Network: OK (tested external connectivity)
      🔗 SSH Connectivity: OK (inter-server communication tested)
      🔥 Firewall: {{ 'RUNNING' if (firewall_service.status.ActiveState == 'active' and firewall_service.status.SubState == 'running') else 'NOT RUNNING' }}
      🎯 Overall Status: PRE-VALIDATION PASSED
