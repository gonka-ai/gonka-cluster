---
# Docker Environment Preparation Role
# Configure Docker group and pull images

- name: Create docker group if it doesn't exist
  group:
    name: docker
    state: present
  become: true

- name: Add ubuntu user to docker group
  user:
    name: ubuntu
    groups: docker
    append: yes
  become: true

- name: Configure Docker to respect UFW rules
  copy:
    content: |
      {
        "iptables": false,
        "userland-proxy": false,
        "bridge": "none"
      }
    dest: /etc/docker/daemon.json
    mode: '0644'
  become: true
  notify: restart docker

- name: Create UFW before rules for Docker
  template:
    src: docker-ufw-before-rules.j2
    dest: /etc/ufw/before.rules
    mode: '0640'
  become: true
  notify: reload ufw

- name: Enable UFW Docker integration
  lineinfile:
    path: /etc/default/ufw
    line: "IPTABLES_DIR=\"/etc/ufw\""
    create: true
  become: true

- name: Refresh user groups (apply docker group membership)
  command: newgrp docker
  become: true
  become_user: ubuntu
  ignore_errors: true
  changed_when: false

- name: Pull all Docker images
  command: docker compose -f docker-compose.yml -f docker-compose.mlnode.yml pull
  args:
    chdir: "{{ gonka_deploy_dir }}"
  async: "{{ docker_timeout }}"
  poll: 60
  register: pull_result

- name: Verify NVIDIA runtime
  command: docker info
  register: docker_info
  failed_when: "'nvidia' not in docker_info.stdout"

- name: Clean up unused Docker images
  command: docker image prune -f
  ignore_errors: true

- name: Show pulled images
  command: docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"
  register: image_list
  changed_when: false

- name: Verify compose files are valid
  command: docker compose -f docker-compose.yml -f docker-compose.mlnode.yml config
  args:
    chdir: "{{ gonka_deploy_dir }}"
  register: compose_validation
  failed_when: compose_validation.rc != 0

- name: Display Docker preparation completion
  debug:
    msg: |
      ‚úÖ Docker environment ready on {{ inventory_hostname }}
      üê≥ Images pulled: {{ image_list.stdout_lines | length }}
      üîß NVIDIA runtime: Configured
      üìÑ Compose files: Valid
      üöÄ Ready for container deployment
